- name: Gather missing facts
  setup:
    gather_subset: distribution
  tags:
  - never
  - nova_hybrid_state
  when: ansible_facts['distribution'] is not defined or ansible_facts['distribution_major_version']
    is not defined
- block:
  - failed_when: false
    name: Check if iscsid is running with proper image
    register: hybrid_iscsid
    shell: 'docker ps | grep "{{iscsid_image}}"

      '
  - block:
    - name: Update the iscsid paunch image in config
      shell: 'set -o pipefail

        jq ''.iscsid.image = "{{ iscsid_image }}" | {"iscsid": .iscsid }'' \

        /var/lib/tripleo-config/docker-container-startup-config-step_3.json >\

        /var/lib/tripleo-config/docker-container-hybrid_iscsid.json

        '
    - lineinfile:
        dest: /etc/hosts
        line: '{{ undercloud_hosts_entries | join('''') }}'
        state: present
      name: Make sure the Undercloud hostname is included in /etc/hosts
      when:
      - undercloud_hosts_entries is defined
    - name: Set container_registry_insecure_registries fact.
      set_fact:
        container_registry_insecure_registries: []
    - ini_file:
        option: registries
        path: /etc/containers/registries.conf
        section: registries.insecure
        value: '{{ container_registry_insecure_registries }}'
      name: Set container_registry_insecure registries
      register: ini_read_result
      when: container_registry_insecure_registries != []
    - args:
        executable: /usr/bin/bash
      name: Restart docker and apply the paunch config
      shell: "set -o pipefail\n# Get list of running containers\nRUNNING=\"$( docker\
        \ ps --format '{{ '{{' }}.Names{{ '}}' }}' )\"\n# Restart docker\nsystemctl\
        \ restart docker\n# Compare running containers now vs before\nTO_STOP=\"$(grep\
        \ -v -f <(echo \"${RUNNING}\")  <(docker ps --format '{{ '{{' }}.Names{{ '}}'\
        \ }}'))\"\n# Check if we need to stop anything and stop it\nif [ -n \"${TO_STOP}\"\
        \ ]; then\n  echo \"${TO_STOP}\" | xargs -r docker stop\nfi\n"
      when:
      - container_registry_insecure_registries != []
      - ini_read_result is changed
    - docker_container:
        name: iscsid
        state: absent
      name: Remove iscsid container before applying new paunch config
    - name: Apply paunch config for iscsid
      shell: paunch apply --file /var/lib/tripleo-config/docker-container-hybrid_iscsid.json
        --config-id hybrid_iscsid
    name: Implement the hybrid state (only if the compute is still Queens)
    when: hybrid_iscsid.rc != 0
  name: Switch iscsid to hybrid state
  tags:
  - never
  - nova_hybrid_state
  vars:
    iscsid_image: registry.redhat.io/rhosp-rhel8/openstack-iscsid:16.2
  when:
  - step|int == 0
  - ansible_facts['distribution'] == 'RedHat'
  - ansible_facts['distribution_major_version'] is version('7', '==')
- block:
  - command: systemctl is-enabled --quiet snmpd
    failed_when: false
    name: Check if snmpd is enabled
    register: snmpd_enabled_result
  - name: Set fact snmpd_enabled
    set_fact:
      snmpd_enabled: '{{ snmpd_enabled_result.rc == 0 }}'
  when: step|int == 0
- name: Gather missing facts
  setup:
    gather_subset: distribution
  tags:
  - always
  when: ansible_facts['distribution'] is not defined or ansible_facts['distribution_major_version']
    is not defined
- name: Set leapp facts
  set_fact:
    upgrade_leapp_command_options: ''
    upgrade_leapp_debug: true
    upgrade_leapp_devel_skip: ''
    upgrade_leapp_enabled: "{{ _upgradeLeappEnabled | bool and\n   ansible_facts['distribution']\
      \ == 'RedHat' and\n   ansible_facts['distribution_major_version'] is version('7',\
      \ '==') }}"
    upgrade_leapp_post_reboot_delay: 120
    upgrade_leapp_reboot_timeout: 3600
  tags:
  - always
  vars:
    _upgradeLeappEnabled: false
- block:
  - name: Run UpgradeInitCommand
    shell: '#!/bin/bash


      '
  - name: Run UpgradeInitCommonCommand
    shell: '#!/bin/bash


      '
  - dnf:
      name: '@{{ item.module }}:{{ item.stream }}/{{ item.profile|default(''common'')
        }}'
      state: present
    loop: '{{ dnf_module_list|list }}'
    name: Ensure DNF modules have the right stream
    vars:
      dnf_module_list: []
    when:
    - ansible_facts['distribution_major_version'] is version('8', '>=')
    - dnf_module_list|length > 0
  - delay: 10
    name: Ensure EL modules are in proper state
    register: _dnf_distro_sync
    retries: 5
    shell: dnf -y distro-sync
    until: _dnf_distro_sync is success
    when: ansible_facts['distribution_major_version'] == '8'
  - name: Clean up Python 2 packages
    package:
      name: python2-*
      state: absent
    when: ansible_facts['distribution_major_version'] == '8'
  - name: Ensure TripleO prerequisite packages are installed
    package:
      name:
      - jq
      - lvm2
      - net-snmp
      - openstack-selinux
      - os-net-config
      - puppet-tripleo
      - python3-heat-agent*
      - rsync
      state: present
    when: ansible_facts['distribution_major_version'] is version('8', '==')
  name: Package and repo update tasks
  when: step|int == 0
- name: Set boolean skip_package_update
  set_fact:
    skip_package_update: false
