- include_role:
    name: tuned
  name: Configure tuned before reboot
  vars:
    tuned_isolated_cores: ''
    tuned_profile: throughput-performance
  when: step|int == 0
- include_role:
    name: tripleo-kernel
    tasks_from: kernelargs.yml
  name: Configure kernel args and reboot
  vars:
    tripleo_kernel_args: ''
    tripleo_kernel_defer_reboot: false
    tripleo_kernel_reboot_timeout: 900
  when: step|int == 0
- block:
  - copy:
      content: "#!/bin/sh\ntmpwatch --nodirs \\\n  -X \"/var/log/containers/*/*log\"\
        \ \\\n  -X \"/var/log/containers/*/*/*log\" \\\n  -X \"/var/log/containers/*/*err\"\
        \ \\\n  {{ LogrotatePurgeAfterDays|int +1 }}d \\\n  /var/log/containers/ 2>&1\
        \ | logger -t container-tmpwatch\n"
      dest: /usr/local/sbin/containers-tmpwatch
      group: root
      mode: 493
      owner: root
    name: Push script
    vars:
      LogrotatePurgeAfterDays: '14'
  - cron:
      job: /usr/local/sbin/containers-tmpwatch
      name: Remove old logs
      special_time: daily
      user: root
    name: Insert cronjob in root crontab
  name: configure tmpwatch on the host
  when: step|int == 2
- block:
  - become: true
    delay: 5
    loop: '{{ lookup(''file'', tripleo_role_name + ''/docker_config.yaml'', errors=''ignore'')
      | default(''{}'', True) | from_yaml | recursive_get_key_from_dict(key=''image'')
      | unique }}'
    loop_control:
      loop_var: prefetch_image
    name: Pre-fetch all the containers
    podman_image:
      force: true
      name: '{{ prefetch_image }}'
      validate_certs: false
    retries: 5
  when:
  - (step|int) == 1
- block:
  - failed_when: rsyslog_config.rc == 2
    name: Check if rsyslog exists
    register: rsyslog_config
    shell: systemctl list-unit-files --type=service | grep -q rsyslog
  - block:
    - copy:
        content: '# Fix for https://bugs.launchpad.net/tripleo/+bug/1776180

          local2.*                 /var/log/containers/swift/swift.log

          &                        stop

          '
        dest: /etc/rsyslog.d/openstack-swift.conf
      name: Forward logging to swift.log file
      register: logconfig
    - name: Restart rsyslogd service after logging conf change
      service: name=rsyslog state=restarted
      when:
      - logconfig is changed
    when:
    - rsyslog_config is changed
    - rsyslog_config.rc == 0
  name: Configure rsyslog for swift-storage
  when: step|int == 1
- become: true
  failed_when:
  - kolla_set_configs_result.rc is defined
  - kolla_set_configs_result.rc not in [0, 125]
  name: Run kolla_set_configs to copy ring files
  register: kolla_set_configs_result
  shell: '{{ container_cli }} exec -u root {{ item }} /usr/local/bin/kolla_set_configs'
  when: step|int == 5
  with_items:
  - swift_account_auditor
  - swift_account_reaper
  - swift_account_replicator
  - swift_account_server
  - swift_container_auditor
  - swift_container_replicator
  - swift_container_server
  - swift_container_updater
  - swift_object_auditor
  - swift_object_expirer
  - swift_object_replicator
  - swift_object_server
  - swift_object_updater
- block:
  - copy:
      content: '[Unit]

        Description=Initialize iptables

        Before=iptables.service

        AssertPathExists=/etc/sysconfig/iptables


        [Service]

        Type=oneshot

        ExecStart=/usr/sbin/iptables -t raw -nL

        Environment=BOOTUP=serial

        Environment=CONSOLETYPE=serial

        StandardOutput=syslog

        StandardError=syslog

        [Install]

        WantedBy=basic.target

        '
      dest: /etc/systemd/system/tripleo-iptables.service
    name: create iptables service
  - copy:
      content: '[Unit]

        Description=Initialize ip6tables

        Before=ip6tables.service

        AssertPathExists=/etc/sysconfig/ip6tables


        [Service]

        Type=oneshot

        ExecStart=/usr/sbin/ip6tables -t raw -nL

        Environment=BOOTUP=serial

        Environment=CONSOLETYPE=serial

        StandardOutput=syslog

        StandardError=syslog

        [Install]

        WantedBy=basic.target

        '
      dest: /etc/systemd/system/tripleo-ip6tables.service
    name: create ip6tables service
  - name: enable tripleo-iptables service (and do a daemon-reload systemd)
    systemd:
      daemon_reload: true
      enabled: true
      name: tripleo-iptables.service
  - name: enable tripleo-ip6tables service
    systemd:
      enabled: true
      name: tripleo-ip6tables.service
  when: step|int == 0
