- include_role:
    name: tripleo_lvmfilter
  name: Run lvmfilter role
  when:
  - step|int == 1
- include_role:
    name: tripleo_nvdimm
  name: manage PMEM namespaces for vPMEM
  vars:
    tripleo_nvdimm_pmem_namespaces: ''
  when:
  - step|int == 1
  - tripleo_nvdimm_pmem_namespaces != ''
- block:
  - name: is KSM enabled
    set_fact:
      compute_ksm_enabled: false
  - block:
    - become: true
      failed_when: false
      name: Check for ksm
      register: ksm_service_check
      shell: systemctl is-active ksm.service || systemctl is-enabled ksm.service
    - name: disable KSM services
      register: ksmdisabled
      service:
        enabled: false
        name: '{{ item }}'
        state: stopped
      when:
      - ksm_service_check.rc is defined
      - ksm_service_check.rc == 0
      with_items:
      - ksm.service
      - ksmtuned.service
    - command: echo 2 >/sys/kernel/mm/ksm/run
      name: delete PageKSM after disable ksm on compute
      when:
      - ksm_service_check.rc is defined
      - ksm_service_check.rc == 0
      - ksmdisabled is changed
    name: disable KSM on compute
    when: not compute_ksm_enabled|bool
  - block:
    - name: make sure package providing ksmtuned is installed (CentOS7)
      package:
        name: qemu-kvm-common-ev
        state: present
      when:
      - ansible_facts['distribution'] == 'CentOS'
      - ansible_facts['distribution_major_version'] is version('7', '==')
    - name: make sure package providing ksmtuned is installed (RHEL7)
      package:
        name: qemu-kvm-common-rhev
        state: present
      when:
      - ansible_facts['distribution'] == 'RedHat'
      - ansible_facts['distribution_major_version'] is version('7', '==')
    - name: make sure package providing ksmtuned is installed (RHEL8 or CentOS8)
      package:
        name: qemu-kvm-common
        state: present
      when:
      - ansible_facts['distribution_major_version'] is version('8', '==')
    - name: enable ksmtunded
      service:
        enabled: true
        name: '{{ item }}'
        state: started
      with_items:
      - ksm.service
      - ksmtuned.service
    name: enable KSM on compute
    when: compute_ksm_enabled|bool
  name: enable/disable ksm
  when:
  - step|int == 1
- block:
  - become: true
    delay: 5
    loop: '{{ lookup(''file'', tripleo_role_name + ''/docker_config.yaml'', errors=''ignore'')
      | default(''{}'', True) | from_yaml | recursive_get_key_from_dict(key=''image'')
      | unique }}'
    loop_control:
      loop_var: prefetch_image
    name: Pre-fetch all the containers
    podman_image:
      force: true
      name: '{{ prefetch_image }}'
      validate_certs: false
    retries: 5
  when:
  - (step|int) == 1
